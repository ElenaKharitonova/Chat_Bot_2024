from aiogram import types, F, Router
from aiogram.filters.command import Command
import logging
import random
import requests
from keyboards.keyboards import kb1, kb2
from utils.random_fox import fox


router = Router()

@router.message(Command('start'))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –Ø –±–æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏. –î–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ.', reply_markup=kb1)

#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É weather
@router.message(Command('weather'))
async def process_message(message: types.Message):
        data = requests.get('https://wttr.in/?format=3')
        await message.answer(data.text)

@router.message(Command('weather1'))
async def process_weather_command(message: types.Message):
    city = message.get_args()
    url ="http://api.openweathermap.org/data/2.5/weather?q={city}&appid=43213d417b53045aa1b6617c529c910&units"/f"=metric&lang=ru "
    res = requests.get(url)
    data = res.json()['main']
    temp = data['temp']
    weather1 = str(temp)
    await bot.send_message(message.from_user.id, f'–í –≥–æ—Ä–æ–¥–µ *{city}* {weather1}–≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ —Ü–µ–ª—å—Å–∏—è',parse_mode="Markdown")

#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É info
@router.message(Command('info'))
async def info_command(message: types.Message):
    # await message.reply('/start\n/weather\n/stop\n —Ñ—Ä–∞–∑–∞ "–ü–æ–∫–∞–∂–∏ –ª–∏—Å—É"')
    await message.reply(f'"/start" –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏(–∏–ª–∏) –≤—ã–∑—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É \n"/weather" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –ú–æ—Å–∫–≤–µ\n"/stop" –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n '\
                        f'—Ñ—Ä–∞–∑–∞ "–ü–æ–∫–∞–∂–∏ –ª–∏—Å—É" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ –ª–∏—Å—ã\n "/prof" –∑–∞–ø—É—Å–∫–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ IT —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤\n'\
                        f'–ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ—Ä–∞–∑—ã "–ö–∏–Ω—å –∫–æ—Å—Ç—å", –±–æ—Ç –±—Ä–æ—Å–∞–µ—Ç –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å\n –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ—Ä–∞–∑—ã "–ó–∞–±–µ–π –º—è—á", –±–æ—Ç –±—å–µ—Ç –ø–æ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–º –≤–æ—Ä–æ—Ç–∞–º\n'\
                        f'–µ—Å–ª–∏ –≤ —Ñ—Ä–∞–∑–µ –µ—Å—Ç—å "—É–º–µ–µ—à—å" –∏–ª–∏ "–º–æ–∂–µ—à—å", –±–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–æ–∫–∞–∂–∏ –ª–∏—Å—É", "/weather", "–∫–æ—Å—Ç—å" –∏–ª–∏ "–≤–æ—Ä–æ—Ç–∞"\n'\
                        f'–ù–∞ –≤–æ–ø—Ä–æ—Å "—Ç—ã –∫—Ç–æ" –∏–ª–∏ "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç" –±–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è')


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É stop
@router.message(Command('stop'))
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {name}')


@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}')
    await message.answer_photo(photo=img_fox)


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' in msg_user or '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è' in msg_user:
        await message.answer(f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –£–¥–∞—á–∏!, {name}')
    elif '–ö–∏–Ω—å' and '–∫–æ—Å—Ç—å' in msg_user:
        await message.answer_dice(emoji="üé≤")
    elif '–ó–∞–±–µ–π' and '–º—è—á' in msg_user:
        await message.answer_dice(emoji="‚öΩ")
    elif '—É–º–µ–µ—à—å' in msg_user or '–º–æ–∂–µ—à—å' in msg_user:
        await message.answer(f'{name}, –°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å', reply_markup = kb2)
    elif '—Ç—ã –∫—Ç–æ' in msg_user or '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç' in msg_user:
        await message.answer(f'–Ø –±–æ—Ç, {name}')

    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–∏—Ö —Å–ª–æ–≤')


